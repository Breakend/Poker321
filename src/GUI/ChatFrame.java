package GUI;

import java.awt.Dimension;
import java.rmi.RemoteException;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JOptionPane;

/**
 * This class implements a message chat in a JFrame
 * 
 * @author mattvertescher
 */
public class ChatFrame extends javax.swing.JFrame {

    public static GUIClient clientRequest;
    public static ServerListener serverListener;
    
    
    private String[] usersInChat; 
    
    /**
     * Creates new form ChatScreen.
     */
    public ChatFrame(GUIClient guic, ServerListener sl, String[] recipients) throws RemoteException, SQLException {
        initComponents();
        Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation((screenSize.width/2)-(this.getWidth()/2), (screenSize.height/2)-(this.getHeight()/2));
        this.setIconImage(new ImageIcon(GUIClient.class.getResource("images/chat_icon.png")).getImage());
        
        clientRequest = guic; 
        serverListener = sl; 
        serverListener.setChatFrame(this);
        
        usersInChat = recipients; 
        
        updateFriendsMenu();
        
    }

    /**
     * Updates the friends menu with a list of friend.
     */
    public void updateFriendsMenu() throws RemoteException, SQLException {
        String[] listOfFriends = clientRequest.getFriends(clientRequest.getUsername());
        
        int inChatIndex = 0;
        for (int i = 0; i < listOfFriends.length; i++) {
            JCheckBoxMenuItem cbmi = new JCheckBoxMenuItem(listOfFriends[i], false);
            if (listOfFriends[i].equals(usersInChat[inChatIndex])) {
                cbmi.setState(true);    
                inChatIndex++;
            }
            cbmi.enableInputMethods(false);
            cbmi.setEnabled(false);
            friendsMenu.add(cbmi);
        }
        
    }
    
    /**
     * Adds a chat message to the chat text area.
     * @param username
     * @param message 
     */
    public boolean addMessageToChat(String username, String message) {
        if (!username.equals(clientRequest.getUsername()))
            chatTextArea.append(username + ": " + message + "\n");
        return true;
    }
    
    /**
     * Method called whenever the chat frame closes.
     */
    private void exitChat() {
        serverListener.releaseChatFrame();
        this.setVisible(false); 
        this.dispose();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        chatScrollPane = new javax.swing.JScrollPane();
        chatTextArea = new javax.swing.JTextArea();
        chatTextField = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        chatMenu = new javax.swing.JMenu();
        exitChatMenuItem = new javax.swing.JMenuItem();
        friendsMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Chat");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        chatTextArea.setColumns(20);
        chatTextArea.setEditable(false);
        chatTextArea.setRows(5);
        chatScrollPane.setViewportView(chatTextArea);

        chatTextField.setText("Chat Here");
        chatTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                chatTextFieldKeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout mainPanelLayout = new org.jdesktop.layout.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(chatScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
            .add(chatTextField)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainPanelLayout.createSequentialGroup()
                .add(chatScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(chatTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        chatMenu.setText("Chat");

        exitChatMenuItem.setText("Exit Chat");
        exitChatMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitChatMenuItemActionPerformed(evt);
            }
        });
        chatMenu.add(exitChatMenuItem);

        menuBar.add(chatMenu);

        friendsMenu.setText("Friends");
        menuBar.add(friendsMenu);

        setJMenuBar(menuBar);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(mainPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * When the enter key is pressed, the chat message is displayed and sent to
     * the server.
     * @param evt 
     */
    private void chatTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chatTextFieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            chatTextArea.append("Player: " + chatTextField.getText() + "\n");
            boolean sent = GUIClient.sendChatMessage(clientRequest.getUsername(), usersInChat, chatTextField.getText());
            if (sent)
                chatTextField.setText("");
            else if(!sent) 
                JOptionPane.showMessageDialog(this, "Message Not Sent", "Server Error", JOptionPane.ERROR_MESSAGE);
        }       
    }//GEN-LAST:event_chatTextFieldKeyPressed

    /**
     * Exit chat closes the chat window. 
     * @param evt 
     */
    private void exitChatMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitChatMenuItemActionPerformed
        exitChat();     
    }//GEN-LAST:event_exitChatMenuItemActionPerformed
    
    /**
     * When the form window closes, the server listener releases its chat frame 
     * reference.
     * @param evt 
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        exitChat();
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu chatMenu;
    private javax.swing.JScrollPane chatScrollPane;
    private javax.swing.JTextArea chatTextArea;
    private javax.swing.JTextField chatTextField;
    private javax.swing.JMenuItem exitChatMenuItem;
    private javax.swing.JMenu friendsMenu;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables
}
